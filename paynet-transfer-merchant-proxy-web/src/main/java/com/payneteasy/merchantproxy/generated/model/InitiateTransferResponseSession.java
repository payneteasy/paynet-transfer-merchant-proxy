package com.payneteasy.merchantproxy.generated.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModelProperty;

/**
 * InitiateTransferResponseSession
 */

public class InitiateTransferResponseSession   {
  @JsonProperty("nonce")
  private String nonce = null;

  @JsonProperty("signature")
  private String signature = null;

  public InitiateTransferResponseSession nonce(String nonce) {
    this.nonce = nonce;
    return this;
  }

   /**
   * Random string, uniquely generated by the proxy
   * @return nonce
  **/
  @ApiModelProperty(value = "Random string, uniquely generated by the proxy")
  public String getNonce() {
    return nonce;
  }

  public void setNonce(String nonce) {
    this.nonce = nonce;
  }

  public InitiateTransferResponseSession signature(String signature) {
    this.signature = signature;
    return this;
  }

   /**
   * Checksum generated by hmac-sha1 of accessToken + device.serialNumber + endpointId + nonce + invoiceId + amountCentis + currency
   * @return signature
  **/
  @ApiModelProperty(value = "Checksum generated by hmac-sha1 of accessToken + device.serialNumber + endpointId + nonce + invoiceId + amountCentis + currency")
  public String getSignature() {
    return signature;
  }

  public void setSignature(String signature) {
    this.signature = signature;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InitiateTransferResponseSession initiateTransferResponseSession = (InitiateTransferResponseSession) o;
    return Objects.equals(this.nonce, initiateTransferResponseSession.nonce) &&
        Objects.equals(this.signature, initiateTransferResponseSession.signature);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nonce, signature);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InitiateTransferResponseSession {\n");
    
    sb.append("    nonce: ").append(toIndentedString(nonce)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

